- const getInputName = (f, property) => `${f.name}[${property}]`

mixin formFor(f, options = {})
  - const url = _.get(options, 'url');
  - const method = _.get(options, 'method', 'get').toLowerCase();
  - const isStandart = _.includes(['get', 'post'], method);
  form.form-signin(action= url method= isStandart ? method : 'post')
    if !isStandart
      input(name='_method' type='hidden' value= method)
    block

mixin input(f, property, id, options = { as: 'text' })
  - const value = f.object[property] === undefined ? '' : f.object[property]
  .form-group(class=(f.errors[property] && 'has-danger'))
    label(for= id)= property
    input(name=getInputName(f, property), id= id, placeholder= property class='form-control' type=options['as'] value=`${value}`)
    if f.errors[property]
      .form-control-feedback= f.errors[property].map(({ message }) => message).join('. ')

mixin inputTags(f, property, id, options = { as: 'text' })
  - const value = f.object[property] === undefined ? '' : f.object[property]
  .form-group(class=(f.errors[property] && 'has-danger'))
    label(for= id)= property
    input(name=property, id= id, class='form-control' type=options['as'] value=`${value}`)
    if f.errors[property]
      .form-control-feedback= f.errors[property].map(({ message }) => message).join('. ')


mixin select(name, id, options, optionName)
  .form-group
    label(for= id)= name
    select(name= name, id= id, class='form-control')
      each option in options
        option(value= option.id)= option[optionName]
                
mixin selectToFilter(name, id, options, optionName)
  .form-group
    label(for= id)= name
    select(name= name, id= id, class='form-control')
      option
      each option in options
        option(value= option.id)= option[optionName]

mixin textarea(f, property, id)
  - const value = f.object[property] === undefined ? '' : f.object[property]
  .form-group(class=(f.errors[property] && 'has-danger'))
    label(for= id)= property
    textarea(name=getInputName(f, property), id= id, placeholder= property class='form-control')= value
    if f.errors[property]
      .form-control-feedback= f.errors[property].map(({ message }) => message).join('. ')

mixin button(f, type = 'submit', value)
  .form-group
    input(class='btn btn-lg btn-primary btn-block' type=`${type}` value=`${value}`)
